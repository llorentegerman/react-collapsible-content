{"version":3,"sources":["webpack:///../src/examples/TransitionEvents.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","Code","Column","CollapsibleContent","ToggleButtonComponent","TextComponent","React","expanded","setExpanded","transitionStatus","setTransitionStatus","style","marginBottom","maxWidth","width","onClick","prev","transitionDuration","onTransitionStart","onTransitionEnd","isMDXComponent"],"mappings":"+jBAYO,IAAMA,EAAe,Q,mNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,6BADR,6BAMA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,41BAAu2BC,SAAO,GAC/4BJ,QACAH,kBACAQ,eACAC,UACAC,SACAC,gBACAC,uBACAC,0BACAC,mBAT+4B,gBAU/4Bd,IAV+4B,EAW/4BH,eAX+4B,GAY94BO,QAAQ,eACV,WAAM,MAC6BW,YAAe,GAAxCC,EADJ,KACcC,EADd,OAE6CF,WAAe,uBAAxDG,EAFJ,KAEsBC,EAFtB,KAGH,OAAO,YAAC,SAAD,CAAQf,QAAQ,UACf,mBAAKgB,MAAO,CAChBC,aAAc,KAEN,+CACA,qBAAIH,IAER,YAAC,SAAD,CAAQE,MAAO,CACnBE,SAAU,IACVC,MAAO,QACNnB,QAAQ,UACD,YAAC,IAAD,CAAuBY,SAAUA,EAAUQ,QAAS,kBAAMP,GAAY,SAAAQ,GAAI,OAAKA,MAAOrB,QAAQ,0BAC9F,YAAC,IAAD,CAAoBY,SAAUA,EAAUU,mBAAoB,OAAQC,kBAAmB,kBAAMR,EAAoB,gBAAgBS,gBAAiB,kBAAMT,EAAoB,YAAYf,QAAQ,sBAC5L,YAAC,IAAD,CAAeA,QAAQ,8B,iNAU/CH,EAAW4B,gBAAiB","file":"component---src-examples-transition-events-mdx-9fb8bfbe10829c0e9b7f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/llorentegerman/Documents/code/otros/react-collapsible-content/docz/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Code } from 'gatsby-theme-docz/src/components/Code';\nimport { Column } from 'simple-flexbox';\nimport CollapsibleContent from 'react-collapsible-content';\nimport ToggleButtonComponent from './common/ToggleButtonComponent';\nimport TextComponent from './common/TextComponent';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"transition-events-example\"\n    }}>{`Transition Events Example`}</h1>\n    {\n      /* prettier-ignore-file */\n    }\n    <Playground __position={0} __code={'() => {\\n  const [expanded, setExpanded] = React.useState(false)\\n  const [transitionStatus, setTransitionStatus] = React.useState(\\n    \\'has not yet started\\',\\n  )\\n  return (\\n    <Column>\\n      <div style={{ marginBottom: 10 }}>\\n        <span>Transition status: </span>\\n        <b>{transitionStatus}</b>\\n      </div>\\n      <Column style={{ maxWidth: 600, width: \\'100%\\' }}>\\n        <ToggleButtonComponent\\n          expanded={expanded}\\n          onClick={() => setExpanded(prev => !prev)}\\n        />\\n        <CollapsibleContent\\n          expanded={expanded}\\n          transitionDuration={\\'1.2s\\'}\\n          onTransitionStart={() => setTransitionStatus(\\'has started\\')}\\n          onTransitionEnd={() => setTransitionStatus(\\'is over\\')}\\n        >\\n          <TextComponent />\\n        </CollapsibleContent>\\n      </Column>\\n    </Column>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Code,\n      Column,\n      CollapsibleContent,\n      ToggleButtonComponent,\n      TextComponent,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    {() => {\n        const [expanded, setExpanded] = React.useState(false);\n        const [transitionStatus, setTransitionStatus] = React.useState('has not yet started');\n        return <Column mdxType=\"Column\">\n                <div style={{\n            marginBottom: 10\n          }}>\n                    <span>Transition status: </span>\n                    <b>{transitionStatus}</b>\n                </div>\n                <Column style={{\n            maxWidth: 600,\n            width: '100%'\n          }} mdxType=\"Column\">\n                    <ToggleButtonComponent expanded={expanded} onClick={() => setExpanded(prev => !prev)} mdxType=\"ToggleButtonComponent\" />\n                    <CollapsibleContent expanded={expanded} transitionDuration={'1.2s'} onTransitionStart={() => setTransitionStatus('has started')} onTransitionEnd={() => setTransitionStatus('is over')} mdxType=\"CollapsibleContent\">\n                        <TextComponent mdxType=\"TextComponent\" />\n                    </CollapsibleContent>\n                </Column>\n            </Column>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}