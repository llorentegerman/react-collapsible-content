(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{"7A3R":function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return u})),t.d(n,"default",(function(){return f}));t("5hJT"),t("W1QL"),t("K/PF"),t("t91x"),t("75LO"),t("PJhk");var o=t("ERkP"),a=t("/FXl"),l=t("TjRS"),c=t("ZFoC"),r=t("75hS"),p=t("IT2Y"),s=t("hSUT"),i=t("H9qe");t("aD51");function b(){return(b=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)}var u={};void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/index.mdx"}});var m={_frontmatter:u},d=l.a;function f(e){var n,t=e.components,f=function(e,n){if(null==e)return{};var t,o,a={},l=Object.keys(e);for(o=0;o<l.length;o++)t=l[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,["components"]);return Object(a.b)(d,b({},m,f,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"react-collapsible-content"},"react-collapsible-content"),Object(a.b)("p",null,"A React Component to handle dynamic collapsible content"),Object(a.b)("h2",{id:"instalation"},"Instalation"),Object(a.b)("pre",null,Object(a.b)("code",b({parentName:"pre"},{className:"language-bash"}),"npm install --save react-collapsible-content\n")),Object(a.b)("pre",null,Object(a.b)("code",b({parentName:"pre"},{className:"language-bash"}),"yarn add react-collapsible-content\n")),Object(a.b)("h2",{id:"how-to-import"},"How to import"),Object(a.b)("pre",null,Object(a.b)("code",b({parentName:"pre"},{className:"language-js"}),"import CollapsibleContent from 'react-collapsible-content';\n")),Object(a.b)("h2",{id:"basic-usage"},"Basic usage"),Object(a.b)("p",null,"In the examples we are using ",Object(a.b)("a",b({parentName:"p"},{href:"/react-collapsible-content/src-examples-basic#togglebuttoncomponent"}),"ToggleButtonComponent")," and ",Object(a.b)("a",b({parentName:"p"},{href:"src-examples-basic#textcomponent"}),"TextComponent")," that are just UI components (see code in ",Object(a.b)("em",{parentName:"p"},"Examples/Basic"),"), but you can use your own button and your own content."),Object(a.b)(c.c,{__position:0,__code:"() => {\n  const [expanded, setExpanded] = React.useState(false)\n  const styles = {\n    container: { maxWidth: 800, width: '100%' },\n  }\n  return (\n    <Column style={styles.container}>\n      <ToggleButtonComponent\n        expanded={expanded}\n        onClick={() => setExpanded(prev => !prev)}\n      />\n      <CollapsibleContent expanded={expanded}>\n        <TextComponent />\n      </CollapsibleContent>\n    </Column>\n  )\n}",__scope:(n={props:f,DefaultLayout:l.a,Playground:c.c,Column:r.Column,CollapsibleContent:p.a,ToggleButtonComponent:s.a,TextComponent:i.a},n.DefaultLayout=l.a,n._frontmatter=u,n),mdxType:"Playground"},(function(){var e=o.useState(!1),n=e[0],t=e[1];return Object(a.b)(r.Column,{style:{maxWidth:800,width:"100%"},mdxType:"Column"},Object(a.b)(s.a,{expanded:n,onClick:function(){return t((function(e){return!e}))},mdxType:"ToggleButtonComponent"}),Object(a.b)(p.a,{expanded:n,mdxType:"CollapsibleContent"},Object(a.b)(i.a,{mdxType:"TextComponent"})))})))}void 0!==f&&f&&f===Object(f)&&Object.isExtensible(f)&&!f.hasOwnProperty("__filemeta")&&Object.defineProperty(f,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/index.mdx"}}),f.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-index-mdx-af8f23f21b80888b8e64.js.map