{"version":3,"sources":["webpack:///../src/examples/basic.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Code","Column","CollapsibleContent","ToggleButtonComponent","TextComponent","React","expanded","setExpanded","style","maxWidth","width","onClick","prev","className","isMDXComponent"],"mappings":"4jBAYO,IAAMA,EAAe,Q,wMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,iBADR,iBAGA,uDAAsC,mBAAGC,WAAW,KAAQ,CACxD,KAAQ,2BAD0B,yBAAtC,QAE2C,mBAAGA,WAAW,KAAQ,CAC7D,KAAQ,mBAD+B,iBAF3C,2DAKA,0CAAyB,mBAAGA,WAAW,KAAQ,CAC3C,KAAQ,iDADa,kBAAzB,QAEoC,mBAAGA,WAAW,KAAQ,CACtD,KAAQ,4CADwB,aAFpC,iCAQA,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,ybAA4bC,SAAO,GACpeL,QACAH,kBACAS,eACAC,UACAC,SACAC,gBACAC,uBACAC,0BACAC,mBAToe,gBAUpef,IAVoe,EAWpeH,eAXoe,GAYneO,QAAQ,eACV,WAAM,MAC6BY,YAAe,GAAxCC,EADJ,KACcC,EADd,KAQH,OAAO,YAAC,SAAD,CAAQC,MALF,CACTC,SAAU,IACVC,MAAO,QAG6BjB,QAAQ,UACxC,YAAC,IAAD,CAAuBa,SAAUA,EAAUK,QAAS,kBAAMJ,GAAY,SAAAK,GAAI,OAAKA,MAAOnB,QAAQ,0BAC9F,YAAC,IAAD,CAAoBa,SAAUA,EAAUb,QAAQ,sBAC5C,YAAC,IAAD,CAAeA,QAAQ,uBAKvC,iBAAQ,CACN,GAAM,yBADR,yBAGA,YAAC,IAAD,CAAMoB,UAAW,MAAOpB,QAAQ,QAAhC,q0DAiEA,iBAAQ,CACN,GAAM,iBADR,iBAGA,YAAC,IAAD,CAAMoB,UAAW,MAAOpB,QAAQ,QAAhC,8c,sMAyBJH,EAAWwB,gBAAiB","file":"component---src-examples-basic-mdx-9c9ac0f1029f38b66a63.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/llorentegerman/Documents/code/otros/react-collapsible-content/docz/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Code } from 'gatsby-theme-docz/src/components/Code';\nimport { Column } from 'simple-flexbox';\nimport CollapsibleContent from 'react-collapsible-content';\nimport ToggleButtonComponent from './common/ToggleButtonComponent';\nimport TextComponent from './common/TextComponent';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"basic-example\"\n    }}>{`Basic Example`}</h1>\n    <p>{`In these examples we are using `}<a parentName=\"p\" {...{\n        \"href\": \"#togglebuttoncomponent\"\n      }}>{`ToggleButtonComponent`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"#textcomponent\"\n      }}>{`TextComponent`}</a>{` (see code below), but you can use your own components.`}</p>\n    <p>{`We are also using `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/simple-flexbox\"\n      }}>{`simple-flexbox`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/aphrodite\"\n      }}>{`aphrodite`}</a>{` to make these UI Components.`}</p>\n    {\n      /* prettier-ignore-file */\n    }\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const [expanded, setExpanded] = React.useState(false)\\n  const styles = {\\n    container: { maxWidth: 800, width: \\'100%\\' },\\n  }\\n  return (\\n    <Column style={styles.container}>\\n      <ToggleButtonComponent\\n        expanded={expanded}\\n        onClick={() => setExpanded(prev => !prev)}\\n      />\\n      <CollapsibleContent expanded={expanded}>\\n        <TextComponent />\\n      </CollapsibleContent>\\n    </Column>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Code,\n      Column,\n      CollapsibleContent,\n      ToggleButtonComponent,\n      TextComponent,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    {() => {\n        const [expanded, setExpanded] = React.useState(false);\n        const styles = {\n          container: {\n            maxWidth: 800,\n            width: '100%'\n          }\n        };\n        return <Column style={styles.container} mdxType=\"Column\">\n                <ToggleButtonComponent expanded={expanded} onClick={() => setExpanded(prev => !prev)} mdxType=\"ToggleButtonComponent\" />\n                <CollapsibleContent expanded={expanded} mdxType=\"CollapsibleContent\">\n                    <TextComponent mdxType=\"TextComponent\" />\n                </CollapsibleContent>\n            </Column>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"togglebuttoncomponent\"\n    }}>{`ToggleButtonComponent`}</h2>\n    <Code className={'tsx'} mdxType=\"Code\">\n    {`\nimport React from 'react';\nimport { StyleSheet, css } from 'aphrodite/no-important';\nimport { Row } from 'simple-flexbox';\nconst styles = StyleSheet.create({\n    button: {\n        border: '1px solid #2EBFA5',\n        borderRadius: 4,\n        cursor: 'pointer',\n        backgroundColor: '#f7f7f7',\n        transition: 'border-radius .725s ease-in-out'\n    },\n    buttonExpanded: {\n        borderBottom: 'none',\n        borderRadius: '4px 4px 0px 0px',\n        transition: 'border-radius .1s ease-in-out'\n    },\n    arrow: {\n        display: 'inline-block',\n        borderTop: '5px solid transparent',\n        borderBottom: '5px solid transparent',\n        borderLeft: '5px solid currentColor',\n        verticalAlign: 'middle',\n        marginRight: '.7rem',\n        transform: 'translateY(-2px)',\n        transition: 'transform .425s ease-in-out'\n    },\n    arrowExpanded: {\n        transform: 'rotate(90deg) translateX(-1px)'\n    },\n    arrowContainer: {\n        display: 'block',\n        margin: 10,\n        marginLeft: 20\n    },\n    label: {\n        margin: 10\n    }\n});\nfunction ToggleButtonComponent({ title = 'TOGGLE', expanded, onClick, style }) {\n    return (\n        <Row\n            wrap={false}\n            className={css(styles.button, expanded && styles.buttonExpanded)}\n            onClick={onClick}\n            style={style}\n        >\n            <div className={css(styles.arrowContainer)}>\n                <span\n                    className={css(\n                        styles.arrow,\n                        expanded && styles.arrowExpanded\n                    )}\n                >\n                    {' '}\n                </span>\n            </div>\n            <span className={css(styles.label)}>{title}</span>\n        </Row>\n    );\n}\nexport default ToggleButtonComponent;\n `}\n    </Code>\n    <h2 {...{\n      \"id\": \"textcomponent\"\n    }}>{`TextComponent`}</h2>\n    <Code className={'tsx'} mdxType=\"Code\">\n    {`\nimport React from 'react';\nexport default function TextComponent({ limit }) {\n    const text = 'place a long text here'.substring(0, limit);\n    return (\n        <p\n            style={{\n                backgroundColor: '#2EBFA5',\n                borderRadius: '0px 0px 4px 4px',\n                color: '#2D3747',\n                margin: 0,\n                padding: 8\n            }}\n        >\n            {text}\n        </p>\n    );\n}\n`}\n    </Code>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}