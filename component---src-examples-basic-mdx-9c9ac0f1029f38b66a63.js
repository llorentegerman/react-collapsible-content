(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{evan:function(n,e,t){"use strict";t.r(e),t.d(e,"_frontmatter",(function(){return b})),t.d(e,"default",(function(){return f}));t("5hJT"),t("W1QL"),t("K/PF"),t("t91x"),t("75LO"),t("PJhk");var o=t("ERkP"),a=t("/FXl"),r=t("TjRS"),s=t("ZFoC"),p=t("D9Iw"),l=t("75hS"),i=t("IT2Y"),c=t("hSUT"),d=t("H9qe");t("aD51");function m(){return(m=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(n[o]=t[o])}return n}).apply(this,arguments)}var b={};void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/examples/basic.mdx"}});var u={_frontmatter:b},x=r.a;function f(n){var e,t=n.components,f=function(n,e){if(null==n)return{};var t,o,a={},r=Object.keys(n);for(o=0;o<r.length;o++)t=r[o],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,["components"]);return Object(a.b)(x,m({},u,f,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"basic-example"},"Basic Example"),Object(a.b)("p",null,"In these examples we are using ",Object(a.b)("a",m({parentName:"p"},{href:"#togglebuttoncomponent"}),"ToggleButtonComponent")," and ",Object(a.b)("a",m({parentName:"p"},{href:"#textcomponent"}),"TextComponent")," (see code below), but you can use your own components."),Object(a.b)("p",null,"We are also using ",Object(a.b)("a",m({parentName:"p"},{href:"https://www.npmjs.com/package/simple-flexbox"}),"simple-flexbox")," and ",Object(a.b)("a",m({parentName:"p"},{href:"https://www.npmjs.com/package/aphrodite"}),"aphrodite")," to make these UI Components."),Object(a.b)("h2",{id:"basic-usage"},"Basic usage"),Object(a.b)(s.c,{__position:0,__code:"() => {\n  const [expanded, setExpanded] = React.useState(false)\n  const styles = {\n    container: { maxWidth: 800, width: '100%' },\n  }\n  return (\n    <Column style={styles.container}>\n      <ToggleButtonComponent\n        expanded={expanded}\n        onClick={() => setExpanded(prev => !prev)}\n      />\n      <CollapsibleContent expanded={expanded}>\n        <TextComponent />\n      </CollapsibleContent>\n    </Column>\n  )\n}",__scope:(e={props:f,DefaultLayout:r.a,Playground:s.c,Props:s.d,Code:p.a,Column:l.Column,CollapsibleContent:i.a,ToggleButtonComponent:c.a,TextComponent:d.a},e.DefaultLayout=r.a,e._frontmatter=b,e),mdxType:"Playground"},(function(){var n=o.useState(!1),e=n[0],t=n[1];return Object(a.b)(l.Column,{style:{maxWidth:800,width:"100%"},mdxType:"Column"},Object(a.b)(c.a,{expanded:e,onClick:function(){return t((function(n){return!n}))},mdxType:"ToggleButtonComponent"}),Object(a.b)(i.a,{expanded:e,mdxType:"CollapsibleContent"},Object(a.b)(d.a,{mdxType:"TextComponent"})))})),Object(a.b)("h2",{id:"togglebuttoncomponent"},"ToggleButtonComponent"),Object(a.b)(p.a,{className:"tsx",mdxType:"Code"},"\nimport React from 'react';\nimport { StyleSheet, css } from 'aphrodite/no-important';\nimport { Row } from 'simple-flexbox';\nconst styles = StyleSheet.create({\n    button: {\n        border: '1px solid #2EBFA5',\n        borderRadius: 4,\n        cursor: 'pointer',\n        backgroundColor: '#f7f7f7',\n        transition: 'border-radius .725s ease-in-out'\n    },\n    buttonExpanded: {\n        borderBottom: 'none',\n        borderRadius: '4px 4px 0px 0px',\n        transition: 'border-radius .1s ease-in-out'\n    },\n    arrow: {\n        display: 'inline-block',\n        borderTop: '5px solid transparent',\n        borderBottom: '5px solid transparent',\n        borderLeft: '5px solid currentColor',\n        verticalAlign: 'middle',\n        marginRight: '.7rem',\n        transform: 'translateY(-2px)',\n        transition: 'transform .425s ease-in-out'\n    },\n    arrowExpanded: {\n        transform: 'rotate(90deg) translateX(-1px)'\n    },\n    arrowContainer: {\n        display: 'block',\n        margin: 10,\n        marginLeft: 20\n    },\n    label: {\n        margin: 10\n    }\n});\nfunction ToggleButtonComponent({ title = 'TOGGLE', expanded, onClick, style }) {\n    return (\n        <Row\n            wrap={false}\n            className={css(styles.button, expanded && styles.buttonExpanded)}\n            onClick={onClick}\n            style={style}\n        >\n            <div className={css(styles.arrowContainer)}>\n                <span\n                    className={css(\n                        styles.arrow,\n                        expanded && styles.arrowExpanded\n                    )}\n                >\n                    {' '}\n                </span>\n            </div>\n            <span className={css(styles.label)}>{title}</span>\n        </Row>\n    );\n}\nexport default ToggleButtonComponent;\n "),Object(a.b)("h2",{id:"textcomponent"},"TextComponent"),Object(a.b)(p.a,{className:"tsx",mdxType:"Code"},"\nimport React from 'react';\nexport default function TextComponent({ limit }) {\n    const text = 'place a long text here'.substring(0, limit);\n    return (\n        <p\n            style={{\n                backgroundColor: '#2EBFA5',\n                borderRadius: '0px 0px 4px 4px',\n                color: '#2D3747',\n                margin: 0,\n                padding: 8\n            }}\n        >\n            {text}\n        </p>\n    );\n}\n"))}void 0!==f&&f&&f===Object(f)&&Object.isExtensible(f)&&!f.hasOwnProperty("__filemeta")&&Object.defineProperty(f,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/examples/basic.mdx"}}),f.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-examples-basic-mdx-9c9ac0f1029f38b66a63.js.map