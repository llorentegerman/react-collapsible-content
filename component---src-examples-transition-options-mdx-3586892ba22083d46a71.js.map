{"version":3,"sources":["webpack:///../src/examples/TransitionOptions.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Code","Column","CollapsibleContent","ToggleButtonComponent","TextComponent","React","expanded","setExpanded","style","maxWidth","width","onClick","prev","transitionDuration","transitionTimingFunction","isMDXComponent"],"mappings":"6jBAYO,IAAMA,EAAe,Q,oNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,sBADR,sBAGA,oDAAmC,sBAAQC,WAAW,KAAnB,sBAAnC,QAAkG,sBAAQA,WAAW,KAAnB,4BAAlG,kCACA,iBAAQ,CACN,GAAM,eADR,eAGA,+CAA8B,sBAAQA,WAAW,KAAnB,sBAA9B,QAA6F,sBAAQA,WAAW,KAAnB,4BAA7F,KACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,+dAAoeC,SAAO,GAC5gBL,QACAH,kBACAS,eACAC,UACAC,SACAC,gBACAC,uBACAC,0BACAC,mBAT4gB,gBAU5gBf,IAV4gB,EAW5gBH,eAX4gB,GAY3gBO,QAAQ,eACV,WAAM,MAC6BY,YAAe,GAAxCC,EADJ,KACcC,EADd,KAEH,OAAO,YAAC,SAAD,CAAQC,MAAO,CACpBC,SAAU,IACVC,MAAO,QACNjB,QAAQ,UACH,YAAC,IAAD,CAAuBa,SAAUA,EAAUK,QAAS,kBAAMJ,GAAY,SAAAK,GAAI,OAAKA,MAAOnB,QAAQ,0BAC9F,YAAC,IAAD,CAAoBa,SAAUA,EAAUO,mBAAmB,OAAOC,yBAAyB,SAASrB,QAAQ,sBACxG,YAAC,IAAD,CAAeA,QAAQ,uBAKvC,iBAAQ,CACN,GAAM,kBADR,kBAGA,kCAAiB,sBAAQC,WAAW,KAAnB,sBAAjB,QAAgF,sBAAQA,WAAW,KAAnB,4BAAhF,mDACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,6gBAAwhBC,SAAO,GAChkBL,QACAH,kBACAS,eACAC,UACAC,SACAC,gBACAC,uBACAC,0BACAC,mBATgkB,gBAUhkBf,IAVgkB,EAWhkBH,eAXgkB,GAY/jBO,QAAQ,eACV,WAAM,MAC6BY,YAAe,GAAxCC,EADJ,KACcC,EADd,KAEH,OAAO,YAAC,SAAD,CAAQC,MAAO,CACpBC,SAAU,IACVC,MAAO,QACNjB,QAAQ,UACH,YAAC,IAAD,CAAuBa,SAAUA,EAAUK,QAAS,kBAAMJ,GAAY,SAAAK,GAAI,OAAKA,MAAOnB,QAAQ,0BAC9F,YAAC,IAAD,CAAoBa,SAAUA,EAAUO,mBAAoBP,EAAW,OAAS,MAAOQ,yBAA0BR,EAAW,WAAa,UAAWb,QAAQ,sBACxJ,YAAC,IAAD,CAAeA,QAAQ,6B,kNAS3CH,EAAWyB,gBAAiB","file":"component---src-examples-transition-options-mdx-3586892ba22083d46a71.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/llorentegerman/Documents/code/otros/react-collapsible-content/docz/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Code } from 'gatsby-theme-docz/src/components/Code';\nimport { Column } from 'simple-flexbox';\nimport CollapsibleContent from 'react-collapsible-content';\nimport ToggleButtonComponent from './common/ToggleButtonComponent';\nimport TextComponent from './common/TextComponent';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"transition-options\"\n    }}>{`Transition Options`}</h1>\n    <p>{`Here we will see how to use `}<strong parentName=\"p\">{`transitionDuration`}</strong>{` and `}<strong parentName=\"p\">{`transitionTimingFunction`}</strong>{` in a basic and advanced mode.`}</p>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <p>{`Set a custom value for `}<strong parentName=\"p\">{`transitionDuration`}</strong>{` and `}<strong parentName=\"p\">{`transitionTimingFunction`}</strong>{`.`}</p>\n    <Playground __position={0} __code={'() => {\\n  const [expanded, setExpanded] = React.useState(false)\\n  return (\\n    <Column style={{ maxWidth: 600, width: \\'100%\\' }}>\\n      <ToggleButtonComponent\\n        expanded={expanded}\\n        onClick={() => setExpanded(prev => !prev)}\\n      />\\n      <CollapsibleContent\\n        expanded={expanded}\\n        transitionDuration=\\\"0.7s\\\"\\n        transitionTimingFunction=\\\"linear\\\"\\n      >\\n        <TextComponent />\\n      </CollapsibleContent>\\n    </Column>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Code,\n      Column,\n      CollapsibleContent,\n      ToggleButtonComponent,\n      TextComponent,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    {() => {\n        const [expanded, setExpanded] = React.useState(false);\n        return <Column style={{\n          maxWidth: 600,\n          width: '100%'\n        }} mdxType=\"Column\">\n                <ToggleButtonComponent expanded={expanded} onClick={() => setExpanded(prev => !prev)} mdxType=\"ToggleButtonComponent\" />\n                <CollapsibleContent expanded={expanded} transitionDuration='0.7s' transitionTimingFunction='linear' mdxType=\"CollapsibleContent\">\n                    <TextComponent mdxType=\"TextComponent\" />\n                </CollapsibleContent>\n            </Column>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"advanced-usage\"\n    }}>{`Advanced usage`}</h2>\n    <p>{`Different `}<strong parentName=\"p\">{`transitionDuration`}</strong>{` and `}<strong parentName=\"p\">{`transitionTimingFunction`}</strong>{` can be defined for expand or collapse actions.`}</p>\n    <Playground __position={1} __code={'() => {\\n  const [expanded, setExpanded] = React.useState(false)\\n  return (\\n    <Column style={{ maxWidth: 600, width: \\'100%\\' }}>\\n      <ToggleButtonComponent\\n        expanded={expanded}\\n        onClick={() => setExpanded(prev => !prev)}\\n      />\\n      <CollapsibleContent\\n        expanded={expanded}\\n        transitionDuration={expanded ? \\'1.5s\\' : \\'.5s\\'}\\n        transitionTimingFunction={expanded ? \\'ease-out\\' : \\'ease-in\\'}\\n      >\\n        <TextComponent />\\n      </CollapsibleContent>\\n    </Column>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Code,\n      Column,\n      CollapsibleContent,\n      ToggleButtonComponent,\n      TextComponent,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    {() => {\n        const [expanded, setExpanded] = React.useState(false);\n        return <Column style={{\n          maxWidth: 600,\n          width: '100%'\n        }} mdxType=\"Column\">\n                <ToggleButtonComponent expanded={expanded} onClick={() => setExpanded(prev => !prev)} mdxType=\"ToggleButtonComponent\" />\n                <CollapsibleContent expanded={expanded} transitionDuration={expanded ? '1.5s' : '.5s'} transitionTimingFunction={expanded ? 'ease-out' : 'ease-in'} mdxType=\"CollapsibleContent\">\n                    <TextComponent mdxType=\"TextComponent\" />\n                </CollapsibleContent>\n            </Column>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}